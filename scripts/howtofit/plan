Chapter 1:

- `tutorial_1_models.py`: What a probabilistic model is and how to compose a model using PyAutoFit.
- `tutorial_2_fitting_data.py`: Fitting a model to data and quantifying its goodness-of-fit.
- `tutorial_3_non_linear_search.py`: Searching a non-linear parameter spaces to find the model that best fits the data.
- `tutorial_4_why_modeling_is_hard.py`: Composing more complex models in a scalable and extensible way.
- `tutorial_5_results_and_samples.py`: Interpreting the results of a model-fit and using the samples to perform scientific analysis.
- `tutorial_6_multiple_datasets.py`: Fitting multiple datasets simultaneously and how to compose models that are shared between datasets.
- `tutorial_7_bayesian_inference`: A formal introduction to Bayesian inference and how it is used to perform model-fitting.
- `tutorial_8_astronomy_example.py`: An example of how PyAutoFit can be used to model-fit astronomical data.

Chapter 2:

- `tutorial_1_output`: Outputting as much information as possible about the model-fit to the hard-disk.
- `tutorial_2_loading_results`: Loading the results of a model-fit from the hard-disk (with and wthout database).
- `tutorial_3_model_customization`: Customizing the model in a way that enables more detailed analysis of the results.
- `tutorial_4_searches`: Customizing the search used to perform the model-fit.
- `tutorial_5_config`: Customizing the configuration of the model-fit.
- `tutorial_6_latent_variables`: Introducing latent variables and how they can be used to model complex datasets.
- `tutorial_7_astronomy_example`: An example of how PyAutoFit can be used to model-fit astronomical data.

Chapter 3:

Mostly follow graphical models chapter but include JAX.